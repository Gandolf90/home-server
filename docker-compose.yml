version: '3'

services:
  db:
    image: mariadb
    container_name: mariadb
    restart: always
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    volumes:
      - ./mariadb:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}

  nextcloud_fpm:
    image: nextcloud:fpm-alpine
    container_name: nextcloud_fpm
    restart: always
    volumes:
      - ./nextcloud:/var/www/html
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    depends_on:
      - db

  nextcloud_nginx:
    build: ./nginx
    container_name: nextcloud_nginx
    restart: always
    volumes:
      - ./nextcloud:/var/www/html:ro
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST}
    depends_on:
      - nextcloud_fpm
    networks:
      - proxy-tier
      - default

  proxy:
    build: ./proxy
    container_name: proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./certs:/etc/nginx/certs:ro
      - ./vhost.d:/etc/nginx/vhost.d
      - ./html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy-tier
    depends_on:
      - omgwtfssl  

  omgwtfssl:
    image: paulczar/omgwtfssl
    container_name: ssl
    restart: "no"
    volumes:
      - ./certs:/certs
    environment:
      - SSL_SUBJECT=${VIRTUAL_HOST}
      - CA_SUBJECT=${VIRTUAL_HOST_EMAIL}
      - SSL_KEY=/certs/servhostname.local.key
      - SSL_CSR=/certs/servhostname.local.csr
      - SSL_CERT=/certs/servhostname.local.crt
    networks:
      - proxy-tier

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    ports:
      - 9001:9000
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/:/data

  adminer:
    build: ./adminer/.
    container_name: adminer
    restart: always
    ports:
      - '8181:8080'
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    links:
      - db

  #factorio-server-manager:
  #  image: majormjr/factorio-server-manager
  #  container_name: factorio-server-manager
  #  restart: always
  #  ports: 
  #    - '80:80'
  #    - '443:443'
  #    - '34197:34197'
  #  volumes:
  #    - ./factorio/saves:/opt/factorio/saves
  #    - ./factorio/mods:/opt/factorio/mods
  #    - ./factorio/config:/opt/factorio/config
  #    - ./security:/security

networks:
  proxy-tier:
